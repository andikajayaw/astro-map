---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Welcome to Astro.">
	<div class="px-3.5 sm:px-4 border-b flex items-center align-middle">
		<div class="grid items-center p-4">
			<div class="font-semibold text-xl text-white">Denpasar Map</div>
		</div>
	</div>
	<div class="flex flex-col h-[calc(100svh_-_3.5rem)]">
		<div class="flex-1 md:mx-4 md:mb-4 mt-2 isolate relative rounded-md overflow-hidden">
			<!-- <div class="absolute z-[999] top-6 left-1/2 -translate-x-1/2 bg-white border rounded-md shadow-md px-4 py-1.5 text-gray-600">Loading... ⏳</div> -->
			<div id="map" class="w-full h-full md:rounded-md opacity-1 map-container"></div>
		</div>
		</section>
	</div>
</Layout>

<script>
import L from "leaflet";
import 'leaflet/dist/leaflet.css';
import {dataDenpasar} from "../../public/data/DataGeoDenpasar"

var states: any = [dataDenpasar()];
function getRandomColor() {
  var letters = '0123456789ABCDEF';
  var color = '#';
  for (var i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}

var osm = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '© OpenStreetMap'
});

var osmHOT = L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '© OpenStreetMap contributors, Tiles style by Humanitarian OpenStreetMap Team hosted by OpenStreetMap France'});

var map = L.map('map', {
    center: [39.73, -104.99],
    zoom: 10,
	zoomControl: true,
    layers: [osm, osmHOT]
});

var baseMaps = {
    "OpenStreetMap": osm,
    "OpenStreetMap.HOT": osmHOT
};

const urlApi = `https://api-sekolah-indonesia.vercel.app`;

const fetchData = async () => {
	await fetch(`${urlApi}/sekolah?page=1&perPage=5`).then((response: any) => response.dataSekolah);
} 


async function whenClicked(e) {
  // e = event
//   onMapClick(e)
  // You can make your ajax call declaration here
  //$.ajax(... 
}

function onEachFeature(feature, layer) {
    // does this feature have a property named popupContent?
    if (feature.properties && feature.properties.village) {
		layer.bindPopup(`${feature.properties.village} - ${feature.properties.district}`);
    }
	// layer.on({
	// 	click: whenClicked
	// });

	layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight,
        click: zoomToFeature
    });
}

function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}

var info = L.control();

info.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
    this.update();
    return this._div;
};

// method that we will use to update the control based on feature properties passed
info.update = function (props) {
    this._div.innerHTML = '<h4>Denpasar Map Based by District and Village</h4>' +  (props ?
        '<b>' + `${props.village} - ${props.district}` + '</b><br />'
        : 'Hover over a district');
};

info.addTo(map);

function highlightFeature(e) {
    info.update(e.target.feature.properties);
}

function resetHighlight(e) {
    info.update();
}

L.geoJSON(states, {
    style: function() {
        return {
			color: getRandomColor()
		}
    },
	onEachFeature: onEachFeature,
	pointToLayer : function(feature, latlng) {
        return L.marker(latlng);
    }
}).addTo(map);

L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);
L.control.layers(baseMaps).addTo(map);
map.locate({setView: true, maxZoom: 11});
map.panTo([-8.556215, 115.096879])

function onLocationError(e) {
    alert(e.message);
}
map.on('locationerror', onLocationError);

function onLocationFound(e) {
    var radius = e.accuracy;

    L.marker(e.latlng).addTo(map)
        .bindPopup("You are within " + radius + " meters from this point").openPopup();

    L.circle(e.latlng, radius).addTo(map);
}
// map.on('locationfound', onLocationFound);

var popup = L.popup();
function onMapClick(e) {
    popup
        .setLatLng(e.latlng)
        .setContent("You clicked the map at " + e.latlng.toString())
        .openOn(map);
    // var radius = e.accuracy;
	// L.marker(e.latlng).addTo(map)
    //     .bindPopup(e.latlng).openPopup();
}
map.on('click', onMapClick);

</script>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
	@font-face{
		font-family: FigtreeVF;
		src: url(chrome-extension://majdfhpaihoncoakbjgbdhglocklcgno/fonts/FigtreeVF.woff2) format("woff2 supports variations"),
		url(chrome-extension://majdfhpaihoncoakbjgbdhglocklcgno/fonts/FigtreeVF.woff2) format("woff2-variations");
		font-weight:100 1000;
		font-display:swap
	}
	.info {
		padding: 6px 8px;
		font: 14px/16px Arial, Helvetica, sans-serif;
		background: white;
		background: rgba(255,255,255,0.8);
		box-shadow: 0 0 15px rgba(0,0,0,0.2);
		border-radius: 5px;
	}
	.info h4 {
		margin: 0 0 5px;
		color: #777;
	}
</style>
